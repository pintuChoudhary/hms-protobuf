// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: auditlogging/auditlog.proto

package auditlogging

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_auditlogging_auditlog_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_auditlogging_auditlog_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_auditlogging_auditlog_proto_rawDescGZIP(), []int{3, 0}
}

type AuditEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`     // e.g., "CREATE", "UPDATE", "DELETE"
	Resource      string                 `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"` // e.g., "PATIENT_RECORD", "APPOINTMENT"
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`     // e.g., "SUCCESS", "FAILURE"
	IpAddress     string                 `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,8,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Details       string                 `protobuf:"bytes,9,opt,name=details,proto3" json:"details,omitempty"`
	Timestamp     string                 `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEvent) Reset() {
	*x = AuditEvent{}
	mi := &file_auditlogging_auditlog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent) ProtoMessage() {}

func (x *AuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_auditlogging_auditlog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent.ProtoReflect.Descriptor instead.
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return file_auditlogging_auditlog_proto_rawDescGZIP(), []int{0}
}

func (x *AuditEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *AuditEvent) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *AuditEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditEvent) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AuditEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AuditEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AuditEvent) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *AuditEvent) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *AuditEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type AuditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditResponse) Reset() {
	*x = AuditResponse{}
	mi := &file_auditlogging_auditlog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditResponse) ProtoMessage() {}

func (x *AuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auditlogging_auditlog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditResponse.ProtoReflect.Descriptor instead.
func (*AuditResponse) Descriptor() ([]byte, []int) {
	return file_auditlogging_auditlog_proto_rawDescGZIP(), []int{1}
}

func (x *AuditResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuditResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_auditlogging_auditlog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auditlogging_auditlog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_auditlogging_auditlog_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=auditlogging.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	Message       string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_auditlogging_auditlog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auditlogging_auditlog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_auditlogging_auditlog_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_auditlogging_auditlog_proto protoreflect.FileDescriptor

const file_auditlogging_auditlog_proto_rawDesc = "" +
	"\n" +
	"\x1bauditlogging/auditlog.proto\x12\fauditlogging\"\xa5\x02\n" +
	"\n" +
	"AuditEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\tR\bresource\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"ip_address\x18\a \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\b \x01(\tR\tuserAgent\x12\x18\n" +
	"\adetails\x18\t \x01(\tR\adetails\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\tR\ttimestamp\"C\n" +
	"\rAuditResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xb4\x01\n" +
	"\x13HealthCheckResponse\x12G\n" +
	"\x06status\x18\x01 \x01(\x0e2/.auditlogging.HealthCheckResponse.ServingStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\xa5\x01\n" +
	"\fAuditService\x12A\n" +
	"\bLogEvent\x12\x18.auditlogging.AuditEvent\x1a\x1b.auditlogging.AuditResponse\x12R\n" +
	"\vHealthCheck\x12 .auditlogging.HealthCheckRequest\x1a!.auditlogging.HealthCheckResponseB\x1dZ\x1b./auditlogging;auditloggingb\x06proto3"

var (
	file_auditlogging_auditlog_proto_rawDescOnce sync.Once
	file_auditlogging_auditlog_proto_rawDescData []byte
)

func file_auditlogging_auditlog_proto_rawDescGZIP() []byte {
	file_auditlogging_auditlog_proto_rawDescOnce.Do(func() {
		file_auditlogging_auditlog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auditlogging_auditlog_proto_rawDesc), len(file_auditlogging_auditlog_proto_rawDesc)))
	})
	return file_auditlogging_auditlog_proto_rawDescData
}

var file_auditlogging_auditlog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_auditlogging_auditlog_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auditlogging_auditlog_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: auditlogging.HealthCheckResponse.ServingStatus
	(*AuditEvent)(nil),                     // 1: auditlogging.AuditEvent
	(*AuditResponse)(nil),                  // 2: auditlogging.AuditResponse
	(*HealthCheckRequest)(nil),             // 3: auditlogging.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 4: auditlogging.HealthCheckResponse
}
var file_auditlogging_auditlog_proto_depIdxs = []int32{
	0, // 0: auditlogging.HealthCheckResponse.status:type_name -> auditlogging.HealthCheckResponse.ServingStatus
	1, // 1: auditlogging.AuditService.LogEvent:input_type -> auditlogging.AuditEvent
	3, // 2: auditlogging.AuditService.HealthCheck:input_type -> auditlogging.HealthCheckRequest
	2, // 3: auditlogging.AuditService.LogEvent:output_type -> auditlogging.AuditResponse
	4, // 4: auditlogging.AuditService.HealthCheck:output_type -> auditlogging.HealthCheckResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_auditlogging_auditlog_proto_init() }
func file_auditlogging_auditlog_proto_init() {
	if File_auditlogging_auditlog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auditlogging_auditlog_proto_rawDesc), len(file_auditlogging_auditlog_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auditlogging_auditlog_proto_goTypes,
		DependencyIndexes: file_auditlogging_auditlog_proto_depIdxs,
		EnumInfos:         file_auditlogging_auditlog_proto_enumTypes,
		MessageInfos:      file_auditlogging_auditlog_proto_msgTypes,
	}.Build()
	File_auditlogging_auditlog_proto = out.File
	file_auditlogging_auditlog_proto_goTypes = nil
	file_auditlogging_auditlog_proto_depIdxs = nil
}
