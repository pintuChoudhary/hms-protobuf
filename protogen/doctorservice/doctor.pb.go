// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: doctorservice/doctor.proto

package doctorservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AppointmentType
type AppointmentType int32

const (
	AppointmentType_Regular AppointmentType = 0
	AppointmentType_Online  AppointmentType = 1
)

// Enum value maps for AppointmentType.
var (
	AppointmentType_name = map[int32]string{
		0: "Regular",
		1: "Online",
	}
	AppointmentType_value = map[string]int32{
		"Regular": 0,
		"Online":  1,
	}
)

func (x AppointmentType) Enum() *AppointmentType {
	p := new(AppointmentType)
	*p = x
	return p
}

func (x AppointmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_doctorservice_doctor_proto_enumTypes[0].Descriptor()
}

func (AppointmentType) Type() protoreflect.EnumType {
	return &file_doctorservice_doctor_proto_enumTypes[0]
}

func (x AppointmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentType.Descriptor instead.
func (AppointmentType) EnumDescriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{0}
}

// GetDoctorsRequest
type GetDoctorsRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	FilterName           string                 `protobuf:"bytes,1,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	FilterSpecialization string                 `protobuf:"bytes,2,opt,name=filter_specialization,json=filterSpecialization,proto3" json:"filter_specialization,omitempty"`
	PageNumber           int32                  `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize             int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetDoctorsRequest) Reset() {
	*x = GetDoctorsRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorsRequest) ProtoMessage() {}

func (x *GetDoctorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorsRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorsRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{0}
}

func (x *GetDoctorsRequest) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

func (x *GetDoctorsRequest) GetFilterSpecialization() string {
	if x != nil {
		return x.FilterSpecialization
	}
	return ""
}

func (x *GetDoctorsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetDoctorsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// GetDoctorsResponse
type GetDoctorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctors       []*Doctor              `protobuf:"bytes,1,rep,name=doctors,proto3" json:"doctors,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorsResponse) Reset() {
	*x = GetDoctorsResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorsResponse) ProtoMessage() {}

func (x *GetDoctorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorsResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorsResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{1}
}

func (x *GetDoctorsResponse) GetDoctors() []*Doctor {
	if x != nil {
		return x.Doctors
	}
	return nil
}

func (x *GetDoctorsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// GetDoctorRequest
type GetDoctorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorRequest) Reset() {
	*x = GetDoctorRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorRequest) ProtoMessage() {}

func (x *GetDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{2}
}

func (x *GetDoctorRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

// GetDoctorResponse
type GetDoctorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctor        *Doctor                `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorResponse) Reset() {
	*x = GetDoctorResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorResponse) ProtoMessage() {}

func (x *GetDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{3}
}

func (x *GetDoctorResponse) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// CreateDoctorRequest
type CreateDoctorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctor        *Doctor                `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDoctorRequest) Reset() {
	*x = CreateDoctorRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorRequest) ProtoMessage() {}

func (x *CreateDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorRequest.ProtoReflect.Descriptor instead.
func (*CreateDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDoctorRequest) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// CreateDoctorResponse
type CreateDoctorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctor        *Doctor                `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDoctorResponse) Reset() {
	*x = CreateDoctorResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDoctorResponse) ProtoMessage() {}

func (x *CreateDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDoctorResponse.ProtoReflect.Descriptor instead.
func (*CreateDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDoctorResponse) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// UpdateDoctorRequest
type UpdateDoctorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Doctor        *Doctor                `protobuf:"bytes,2,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDoctorRequest) Reset() {
	*x = UpdateDoctorRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDoctorRequest) ProtoMessage() {}

func (x *UpdateDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDoctorRequest.ProtoReflect.Descriptor instead.
func (*UpdateDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDoctorRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *UpdateDoctorRequest) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// UpdateDoctorResponse
type UpdateDoctorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctor        *Doctor                `protobuf:"bytes,1,opt,name=doctor,proto3" json:"doctor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDoctorResponse) Reset() {
	*x = UpdateDoctorResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDoctorResponse) ProtoMessage() {}

func (x *UpdateDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDoctorResponse.ProtoReflect.Descriptor instead.
func (*UpdateDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDoctorResponse) GetDoctor() *Doctor {
	if x != nil {
		return x.Doctor
	}
	return nil
}

// DeleteDoctorRequest
type DeleteDoctorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDoctorRequest) Reset() {
	*x = DeleteDoctorRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDoctorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDoctorRequest) ProtoMessage() {}

func (x *DeleteDoctorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDoctorRequest.ProtoReflect.Descriptor instead.
func (*DeleteDoctorRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDoctorRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

// DeleteDoctorResponse
type DeleteDoctorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDoctorResponse) Reset() {
	*x = DeleteDoctorResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDoctorResponse) ProtoMessage() {}

func (x *DeleteDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDoctorResponse.ProtoReflect.Descriptor instead.
func (*DeleteDoctorResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDoctorResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetDoctorScheduleRequest
type GetDoctorScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorScheduleRequest) Reset() {
	*x = GetDoctorScheduleRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorScheduleRequest) ProtoMessage() {}

func (x *GetDoctorScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorScheduleRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{10}
}

func (x *GetDoctorScheduleRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetDoctorScheduleRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// GetDoctorScheduleResponse
type GetDoctorScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedules     []*Schedule            `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorScheduleResponse) Reset() {
	*x = GetDoctorScheduleResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorScheduleResponse) ProtoMessage() {}

func (x *GetDoctorScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorScheduleResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{11}
}

func (x *GetDoctorScheduleResponse) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

// UpdateDoctorScheduleRequest
type UpdateDoctorScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Schedule      *Schedule              `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDoctorScheduleRequest) Reset() {
	*x = UpdateDoctorScheduleRequest{}
	mi := &file_doctorservice_doctor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDoctorScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDoctorScheduleRequest) ProtoMessage() {}

func (x *UpdateDoctorScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDoctorScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateDoctorScheduleRequest) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateDoctorScheduleRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *UpdateDoctorScheduleRequest) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// UpdateDoctorScheduleResponse
type UpdateDoctorScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedule      *Schedule              `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDoctorScheduleResponse) Reset() {
	*x = UpdateDoctorScheduleResponse{}
	mi := &file_doctorservice_doctor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDoctorScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDoctorScheduleResponse) ProtoMessage() {}

func (x *UpdateDoctorScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDoctorScheduleResponse.ProtoReflect.Descriptor instead.
func (*UpdateDoctorScheduleResponse) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateDoctorScheduleResponse) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

// Doctor
type Doctor struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender           string                 `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Address          *Address               `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Specialization   string                 `protobuf:"bytes,5,opt,name=specialization,proto3" json:"specialization,omitempty"`
	LicenseId        string                 `protobuf:"bytes,6,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	DateOfBirth      string                 `protobuf:"bytes,7,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Email            string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Education        string                 `protobuf:"bytes,9,opt,name=education,proto3" json:"education,omitempty"`
	Languages        []string               `protobuf:"bytes,10,rep,name=languages,proto3" json:"languages,omitempty"`
	Experience       string                 `protobuf:"bytes,11,opt,name=experience,proto3" json:"experience,omitempty"`
	Procedures       []*Procedure           `protobuf:"bytes,12,rep,name=procedures,proto3" json:"procedures,omitempty"`
	Certifications   []*Certification       `protobuf:"bytes,13,rep,name=certifications,proto3" json:"certifications,omitempty"`
	Contact          string                 `protobuf:"bytes,14,opt,name=contact,proto3" json:"contact,omitempty"`
	RegularHours     []*WeeklySchedule      `protobuf:"bytes,15,rep,name=regular_hours,json=regularHours,proto3" json:"regular_hours,omitempty"`
	TimeSlots        []*TimeSlot            `protobuf:"bytes,16,rep,name=time_slots,json=timeSlots,proto3" json:"time_slots,omitempty"`
	TimeOffs         []*TimeOff             `protobuf:"bytes,17,rep,name=time_offs,json=timeOffs,proto3" json:"time_offs,omitempty"`
	AppointmentTypes []AppointmentType      `protobuf:"varint,18,rep,packed,name=appointment_types,json=appointmentTypes,proto3,enum=doctorservice.AppointmentType" json:"appointment_types,omitempty"`
	Availability     bool                   `protobuf:"varint,19,opt,name=availability,proto3" json:"availability,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Doctor) Reset() {
	*x = Doctor{}
	mi := &file_doctorservice_doctor_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Doctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doctor) ProtoMessage() {}

func (x *Doctor) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doctor.ProtoReflect.Descriptor instead.
func (*Doctor) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{14}
}

func (x *Doctor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Doctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Doctor) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Doctor) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Doctor) GetSpecialization() string {
	if x != nil {
		return x.Specialization
	}
	return ""
}

func (x *Doctor) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *Doctor) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *Doctor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Doctor) GetEducation() string {
	if x != nil {
		return x.Education
	}
	return ""
}

func (x *Doctor) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Doctor) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *Doctor) GetProcedures() []*Procedure {
	if x != nil {
		return x.Procedures
	}
	return nil
}

func (x *Doctor) GetCertifications() []*Certification {
	if x != nil {
		return x.Certifications
	}
	return nil
}

func (x *Doctor) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Doctor) GetRegularHours() []*WeeklySchedule {
	if x != nil {
		return x.RegularHours
	}
	return nil
}

func (x *Doctor) GetTimeSlots() []*TimeSlot {
	if x != nil {
		return x.TimeSlots
	}
	return nil
}

func (x *Doctor) GetTimeOffs() []*TimeOff {
	if x != nil {
		return x.TimeOffs
	}
	return nil
}

func (x *Doctor) GetAppointmentTypes() []AppointmentType {
	if x != nil {
		return x.AppointmentTypes
	}
	return nil
}

func (x *Doctor) GetAvailability() bool {
	if x != nil {
		return x.Availability
	}
	return false
}

func (x *Doctor) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Doctor) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Address
type Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Street        string                 `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip           string                 `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	Country       string                 `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_doctorservice_doctor_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{15}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// Procedure
type Procedure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expertise      string                 `protobuf:"bytes,2,opt,name=expertise,proto3" json:"expertise,omitempty"`
	PerformedCount int32                  `protobuf:"varint,3,opt,name=performed_count,json=performedCount,proto3" json:"performed_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Procedure) Reset() {
	*x = Procedure{}
	mi := &file_doctorservice_doctor_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Procedure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Procedure) ProtoMessage() {}

func (x *Procedure) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Procedure.ProtoReflect.Descriptor instead.
func (*Procedure) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{16}
}

func (x *Procedure) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Procedure) GetExpertise() string {
	if x != nil {
		return x.Expertise
	}
	return ""
}

func (x *Procedure) GetPerformedCount() int32 {
	if x != nil {
		return x.PerformedCount
	}
	return 0
}

// Certification
type Certification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Certification) Reset() {
	*x = Certification{}
	mi := &file_doctorservice_doctor_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certification) ProtoMessage() {}

func (x *Certification) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certification.ProtoReflect.Descriptor instead.
func (*Certification) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{17}
}

func (x *Certification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Certification) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// WeeklySchedule
type WeeklySchedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DayOfWeek     string                 `protobuf:"bytes,1,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	StartTime     string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeeklySchedule) Reset() {
	*x = WeeklySchedule{}
	mi := &file_doctorservice_doctor_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklySchedule) ProtoMessage() {}

func (x *WeeklySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklySchedule.ProtoReflect.Descriptor instead.
func (*WeeklySchedule) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{18}
}

func (x *WeeklySchedule) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

func (x *WeeklySchedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WeeklySchedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// TimeSlot
type TimeSlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Duration      int32                  `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Capacity      int32                  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	mi := &file_doctorservice_doctor_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{19}
}

func (x *TimeSlot) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TimeSlot) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TimeSlot) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

// TimeOff
type TimeOff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeOff) Reset() {
	*x = TimeOff{}
	mi := &file_doctorservice_doctor_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeOff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeOff) ProtoMessage() {}

func (x *TimeOff) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeOff.ProtoReflect.Descriptor instead.
func (*TimeOff) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{20}
}

func (x *TimeOff) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeOff) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeOff) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Schedule
type Schedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DoctorId      string                 `protobuf:"bytes,2,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PatientId     string                 `protobuf:"bytes,3,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Date          string                 `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	StartTime     string                 `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_doctorservice_doctor_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_doctorservice_doctor_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_doctorservice_doctor_proto_rawDescGZIP(), []int{21}
}

func (x *Schedule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Schedule) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *Schedule) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Schedule) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Schedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Schedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Schedule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Schedule) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Schedule) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Schedule) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_doctorservice_doctor_proto protoreflect.FileDescriptor

const file_doctorservice_doctor_proto_rawDesc = "" +
	"\n" +
	"\x1adoctorservice/doctor.proto\x12\rdoctorservice\"\xa7\x01\n" +
	"\x11GetDoctorsRequest\x12\x1f\n" +
	"\vfilter_name\x18\x01 \x01(\tR\n" +
	"filterName\x123\n" +
	"\x15filter_specialization\x18\x02 \x01(\tR\x14filterSpecialization\x12\x1f\n" +
	"\vpage_number\x18\x03 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"f\n" +
	"\x12GetDoctorsResponse\x12/\n" +
	"\adoctors\x18\x01 \x03(\v2\x15.doctorservice.DoctorR\adoctors\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"/\n" +
	"\x10GetDoctorRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\"B\n" +
	"\x11GetDoctorResponse\x12-\n" +
	"\x06doctor\x18\x01 \x01(\v2\x15.doctorservice.DoctorR\x06doctor\"D\n" +
	"\x13CreateDoctorRequest\x12-\n" +
	"\x06doctor\x18\x01 \x01(\v2\x15.doctorservice.DoctorR\x06doctor\"E\n" +
	"\x14CreateDoctorResponse\x12-\n" +
	"\x06doctor\x18\x01 \x01(\v2\x15.doctorservice.DoctorR\x06doctor\"a\n" +
	"\x13UpdateDoctorRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\x12-\n" +
	"\x06doctor\x18\x02 \x01(\v2\x15.doctorservice.DoctorR\x06doctor\"E\n" +
	"\x14UpdateDoctorResponse\x12-\n" +
	"\x06doctor\x18\x01 \x01(\v2\x15.doctorservice.DoctorR\x06doctor\"2\n" +
	"\x13DeleteDoctorRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\"0\n" +
	"\x14DeleteDoctorResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"K\n" +
	"\x18GetDoctorScheduleRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\"R\n" +
	"\x19GetDoctorScheduleResponse\x125\n" +
	"\tschedules\x18\x01 \x03(\v2\x17.doctorservice.ScheduleR\tschedules\"o\n" +
	"\x1bUpdateDoctorScheduleRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\x123\n" +
	"\bschedule\x18\x02 \x01(\v2\x17.doctorservice.ScheduleR\bschedule\"S\n" +
	"\x1cUpdateDoctorScheduleResponse\x123\n" +
	"\bschedule\x18\x01 \x01(\v2\x17.doctorservice.ScheduleR\bschedule\"\xcd\x06\n" +
	"\x06Doctor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06gender\x18\x03 \x01(\tR\x06gender\x120\n" +
	"\aaddress\x18\x04 \x01(\v2\x16.doctorservice.AddressR\aaddress\x12&\n" +
	"\x0especialization\x18\x05 \x01(\tR\x0especialization\x12\x1d\n" +
	"\n" +
	"license_id\x18\x06 \x01(\tR\tlicenseId\x12\"\n" +
	"\rdate_of_birth\x18\a \x01(\tR\vdateOfBirth\x12\x14\n" +
	"\x05email\x18\b \x01(\tR\x05email\x12\x1c\n" +
	"\teducation\x18\t \x01(\tR\teducation\x12\x1c\n" +
	"\tlanguages\x18\n" +
	" \x03(\tR\tlanguages\x12\x1e\n" +
	"\n" +
	"experience\x18\v \x01(\tR\n" +
	"experience\x128\n" +
	"\n" +
	"procedures\x18\f \x03(\v2\x18.doctorservice.ProcedureR\n" +
	"procedures\x12D\n" +
	"\x0ecertifications\x18\r \x03(\v2\x1c.doctorservice.CertificationR\x0ecertifications\x12\x18\n" +
	"\acontact\x18\x0e \x01(\tR\acontact\x12B\n" +
	"\rregular_hours\x18\x0f \x03(\v2\x1d.doctorservice.WeeklyScheduleR\fregularHours\x126\n" +
	"\n" +
	"time_slots\x18\x10 \x03(\v2\x17.doctorservice.TimeSlotR\ttimeSlots\x123\n" +
	"\ttime_offs\x18\x11 \x03(\v2\x16.doctorservice.TimeOffR\btimeOffs\x12K\n" +
	"\x11appointment_types\x18\x12 \x03(\x0e2\x1e.doctorservice.AppointmentTypeR\x10appointmentTypes\x12\"\n" +
	"\favailability\x18\x13 \x01(\bR\favailability\x12\x1d\n" +
	"\n" +
	"created_at\x18\x14 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x15 \x01(\tR\tupdatedAt\"w\n" +
	"\aAddress\x12\x16\n" +
	"\x06street\x18\x01 \x01(\tR\x06street\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\x12\x10\n" +
	"\x03zip\x18\x04 \x01(\tR\x03zip\x12\x18\n" +
	"\acountry\x18\x05 \x01(\tR\acountry\"f\n" +
	"\tProcedure\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\texpertise\x18\x02 \x01(\tR\texpertise\x12'\n" +
	"\x0fperformed_count\x18\x03 \x01(\x05R\x0eperformedCount\"9\n" +
	"\rCertification\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\"j\n" +
	"\x0eWeeklySchedule\x12\x1e\n" +
	"\vday_of_week\x18\x01 \x01(\tR\tdayOfWeek\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\"V\n" +
	"\bTimeSlot\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\x05R\bduration\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\bcapacity\x18\x03 \x01(\x05R\bcapacity\"[\n" +
	"\aTimeOff\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\tR\aendTime\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x8e\x02\n" +
	"\bSchedule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdoctor_id\x18\x02 \x01(\tR\bdoctorId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x03 \x01(\tR\tpatientId\x12\x12\n" +
	"\x04date\x18\x04 \x01(\tR\x04date\x12\x1d\n" +
	"\n" +
	"start_time\x18\x05 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x06 \x01(\tR\aendTime\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\tR\tupdatedAt**\n" +
	"\x0fAppointmentType\x12\v\n" +
	"\aRegular\x10\x00\x12\n" +
	"\n" +
	"\x06Online\x10\x012\x96\x05\n" +
	"\rDoctorService\x12Q\n" +
	"\n" +
	"GetDoctors\x12 .doctorservice.GetDoctorsRequest\x1a!.doctorservice.GetDoctorsResponse\x12N\n" +
	"\tGetDoctor\x12\x1f.doctorservice.GetDoctorRequest\x1a .doctorservice.GetDoctorResponse\x12W\n" +
	"\fCreateDoctor\x12\".doctorservice.CreateDoctorRequest\x1a#.doctorservice.CreateDoctorResponse\x12W\n" +
	"\fUpdateDoctor\x12\".doctorservice.UpdateDoctorRequest\x1a#.doctorservice.UpdateDoctorResponse\x12W\n" +
	"\fDeleteDoctor\x12\".doctorservice.DeleteDoctorRequest\x1a#.doctorservice.DeleteDoctorResponse\x12f\n" +
	"\x11GetDoctorSchedule\x12'.doctorservice.GetDoctorScheduleRequest\x1a(.doctorservice.GetDoctorScheduleResponse\x12o\n" +
	"\x14UpdateDoctorSchedule\x12*.doctorservice.UpdateDoctorScheduleRequest\x1a+.doctorservice.UpdateDoctorScheduleResponseB\x1fZ\x1d./doctorservice;doctorserviceb\x06proto3"

var (
	file_doctorservice_doctor_proto_rawDescOnce sync.Once
	file_doctorservice_doctor_proto_rawDescData []byte
)

func file_doctorservice_doctor_proto_rawDescGZIP() []byte {
	file_doctorservice_doctor_proto_rawDescOnce.Do(func() {
		file_doctorservice_doctor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_doctorservice_doctor_proto_rawDesc), len(file_doctorservice_doctor_proto_rawDesc)))
	})
	return file_doctorservice_doctor_proto_rawDescData
}

var file_doctorservice_doctor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_doctorservice_doctor_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_doctorservice_doctor_proto_goTypes = []any{
	(AppointmentType)(0),                 // 0: doctorservice.AppointmentType
	(*GetDoctorsRequest)(nil),            // 1: doctorservice.GetDoctorsRequest
	(*GetDoctorsResponse)(nil),           // 2: doctorservice.GetDoctorsResponse
	(*GetDoctorRequest)(nil),             // 3: doctorservice.GetDoctorRequest
	(*GetDoctorResponse)(nil),            // 4: doctorservice.GetDoctorResponse
	(*CreateDoctorRequest)(nil),          // 5: doctorservice.CreateDoctorRequest
	(*CreateDoctorResponse)(nil),         // 6: doctorservice.CreateDoctorResponse
	(*UpdateDoctorRequest)(nil),          // 7: doctorservice.UpdateDoctorRequest
	(*UpdateDoctorResponse)(nil),         // 8: doctorservice.UpdateDoctorResponse
	(*DeleteDoctorRequest)(nil),          // 9: doctorservice.DeleteDoctorRequest
	(*DeleteDoctorResponse)(nil),         // 10: doctorservice.DeleteDoctorResponse
	(*GetDoctorScheduleRequest)(nil),     // 11: doctorservice.GetDoctorScheduleRequest
	(*GetDoctorScheduleResponse)(nil),    // 12: doctorservice.GetDoctorScheduleResponse
	(*UpdateDoctorScheduleRequest)(nil),  // 13: doctorservice.UpdateDoctorScheduleRequest
	(*UpdateDoctorScheduleResponse)(nil), // 14: doctorservice.UpdateDoctorScheduleResponse
	(*Doctor)(nil),                       // 15: doctorservice.Doctor
	(*Address)(nil),                      // 16: doctorservice.Address
	(*Procedure)(nil),                    // 17: doctorservice.Procedure
	(*Certification)(nil),                // 18: doctorservice.Certification
	(*WeeklySchedule)(nil),               // 19: doctorservice.WeeklySchedule
	(*TimeSlot)(nil),                     // 20: doctorservice.TimeSlot
	(*TimeOff)(nil),                      // 21: doctorservice.TimeOff
	(*Schedule)(nil),                     // 22: doctorservice.Schedule
}
var file_doctorservice_doctor_proto_depIdxs = []int32{
	15, // 0: doctorservice.GetDoctorsResponse.doctors:type_name -> doctorservice.Doctor
	15, // 1: doctorservice.GetDoctorResponse.doctor:type_name -> doctorservice.Doctor
	15, // 2: doctorservice.CreateDoctorRequest.doctor:type_name -> doctorservice.Doctor
	15, // 3: doctorservice.CreateDoctorResponse.doctor:type_name -> doctorservice.Doctor
	15, // 4: doctorservice.UpdateDoctorRequest.doctor:type_name -> doctorservice.Doctor
	15, // 5: doctorservice.UpdateDoctorResponse.doctor:type_name -> doctorservice.Doctor
	22, // 6: doctorservice.GetDoctorScheduleResponse.schedules:type_name -> doctorservice.Schedule
	22, // 7: doctorservice.UpdateDoctorScheduleRequest.schedule:type_name -> doctorservice.Schedule
	22, // 8: doctorservice.UpdateDoctorScheduleResponse.schedule:type_name -> doctorservice.Schedule
	16, // 9: doctorservice.Doctor.address:type_name -> doctorservice.Address
	17, // 10: doctorservice.Doctor.procedures:type_name -> doctorservice.Procedure
	18, // 11: doctorservice.Doctor.certifications:type_name -> doctorservice.Certification
	19, // 12: doctorservice.Doctor.regular_hours:type_name -> doctorservice.WeeklySchedule
	20, // 13: doctorservice.Doctor.time_slots:type_name -> doctorservice.TimeSlot
	21, // 14: doctorservice.Doctor.time_offs:type_name -> doctorservice.TimeOff
	0,  // 15: doctorservice.Doctor.appointment_types:type_name -> doctorservice.AppointmentType
	1,  // 16: doctorservice.DoctorService.GetDoctors:input_type -> doctorservice.GetDoctorsRequest
	3,  // 17: doctorservice.DoctorService.GetDoctor:input_type -> doctorservice.GetDoctorRequest
	5,  // 18: doctorservice.DoctorService.CreateDoctor:input_type -> doctorservice.CreateDoctorRequest
	7,  // 19: doctorservice.DoctorService.UpdateDoctor:input_type -> doctorservice.UpdateDoctorRequest
	9,  // 20: doctorservice.DoctorService.DeleteDoctor:input_type -> doctorservice.DeleteDoctorRequest
	11, // 21: doctorservice.DoctorService.GetDoctorSchedule:input_type -> doctorservice.GetDoctorScheduleRequest
	13, // 22: doctorservice.DoctorService.UpdateDoctorSchedule:input_type -> doctorservice.UpdateDoctorScheduleRequest
	2,  // 23: doctorservice.DoctorService.GetDoctors:output_type -> doctorservice.GetDoctorsResponse
	4,  // 24: doctorservice.DoctorService.GetDoctor:output_type -> doctorservice.GetDoctorResponse
	6,  // 25: doctorservice.DoctorService.CreateDoctor:output_type -> doctorservice.CreateDoctorResponse
	8,  // 26: doctorservice.DoctorService.UpdateDoctor:output_type -> doctorservice.UpdateDoctorResponse
	10, // 27: doctorservice.DoctorService.DeleteDoctor:output_type -> doctorservice.DeleteDoctorResponse
	12, // 28: doctorservice.DoctorService.GetDoctorSchedule:output_type -> doctorservice.GetDoctorScheduleResponse
	14, // 29: doctorservice.DoctorService.UpdateDoctorSchedule:output_type -> doctorservice.UpdateDoctorScheduleResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_doctorservice_doctor_proto_init() }
func file_doctorservice_doctor_proto_init() {
	if File_doctorservice_doctor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_doctorservice_doctor_proto_rawDesc), len(file_doctorservice_doctor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doctorservice_doctor_proto_goTypes,
		DependencyIndexes: file_doctorservice_doctor_proto_depIdxs,
		EnumInfos:         file_doctorservice_doctor_proto_enumTypes,
		MessageInfos:      file_doctorservice_doctor_proto_msgTypes,
	}.Build()
	File_doctorservice_doctor_proto = out.File
	file_doctorservice_doctor_proto_goTypes = nil
	file_doctorservice_doctor_proto_depIdxs = nil
}
